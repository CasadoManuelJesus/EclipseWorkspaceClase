package Ejercicio6;

import java.util.Iterator;

/*
 * 6.- Crear un vector con quinientos millones de elementos con valores
 * aleatorios. Proceder a buscar el mayor sin el empleo de hilos, luego buscar el
 * mayor pero utilizando dos hilos, uno que busque el mayor en la primera parte
 * del vector y otro que busque en la segunda parte.
 * Mostrar la cantidad de tiempo consumido en la b√∫squeda del mayor con hilos y
 * sin hilos.
 */

public class HiloBusquedaMayor extends Thread {
	private int[] numeros;
	private int inicio;
	private int fin;
	private int numMayor;
	
	public HiloBusquedaMayor(int[] numeros, int inicio, int fin) {
		super();
		this.inicio = inicio;
		this.fin = fin;
		this.numeros = numeros;
	}
	
	@Override
		public void run() {
			busquedaMayor();
		}

	public int getNumMayor() {
		return numMayor;
	}
	
	private int busquedaMayor() {
		int resultado = 0;
		for (int i = inicio; i < fin; i++) {
			if(numeros[i] > resultado) {
				resultado = numeros[i];
			}
		}
		
		return resultado;
	}	
	
}
